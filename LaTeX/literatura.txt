Preprosti zapiski/reference literatur (te potem dodaj v literatura.bib datoteko) ============================================

	[https://en.wikipedia.org/wiki/Comparison_of_parser_generators]
	Prikaže vse parser generatorje in njihove sintaksne analize.

	[https://stackoverflow.com/questions/2998768/how-can-a-languages-compiler-be-written-in-that-language]
	Prevajalniki so lahko spisani v programskih jezikih za katere tudi prevajajo. Na primer, tako deluje GCC. GO parser ima spisanega v GO jeziku. 
	
	[https://jayconrod.com/posts/65/how-to-build-a-parser-by-hand]
	Handwritten parserji ti tudi omogoèajo, da parsaš Non-Contex-Free Grammars. 
	
	[https://en.wikipedia.org/wiki/Recursive_ascent_parser]
	RAP (recursive ascent parser) in RDP (recursive descent parser) sta lahko tudi skupaj, saj se velikokrat skupaj uporabljata 
	GNU bison (YACC) lahko generira GLR ali pa LALR parserje.
	
	[https://www.slideshare.net/Tanzeela_Hussain/top-down-parsing-predictive-parsing]
	Predictive parserji so tisti recimo parserji oblike LL(1). Tisti, ki ne uporabljajo backtrackinga.
	
	[https://en.wikipedia.org/wiki/Comparison_of_parser_generators]
	Deterministièno neodvisna gramatika je lahko super sparsana z pomoèjo Deterministiènega Pushdown Automationa ki ga pa itak uporabljajo vsi parserji.
	
	[https://en.wikipedia.org/wiki/LL_parser]
	LL parserji so table-based, podobno kot LR.
		

CLANG ===========================================
	[https://stackoverflow.com/questions/6319086/are-gcc-and-clang-parsers-really-handwritten]
	Je tipa Handwritten recursive descent parser. Razlogi so hitrost, diagnostika, preprostost
	
	[https://clang.llvm.org/]
	CLang je v bistvu frontend za LLVM
	
	
GCC =============================================
	Uporablja do 2 "look-ahead" žetona, veè kot to jih paè ne potrebuje
	Vsebuje RTL parser (ki deluje na nivoju znakov) in pa C_PARSER (ki deluje na nivoju žetonov)
	
	[https://stackoverflow.com/questions/6319086/are-gcc-and-clang-parsers-really-handwritten]
	Gcc naj bi vèasih uporabljal LALR parserje, ki so bili heckani, sedaj pa uporablja handwritten. Boljši pa so GLR parserji. 
	GCC used Yacc (bison) parser once upon a time but was replace with handwritten parsers in 3.x.x version up.
	
	
ROSLYN ==========================================
	[https://twitter.com/xoofx/status/307723579531862018]
	Is Recursive descent handwritten parser.
	

SPIDERMONKEY ====================================
	[https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Internals]
	Is a handwritten recursive descent parser
	
	
ESPRIMA =========================================
	[https://ariya.io/2011/12/introducing-esprima]
	Recursive descent parser.
	

GOOGLE V8, RHINO, NITRO =======================================
	[http://renesd.blogspot.com/2011/08/lets-make-shit-javascript-interpreter.html]
	Recursive descent parser.